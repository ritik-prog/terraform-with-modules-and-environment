name: Terraform Apply

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  terraform_apply_destroy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Terraform code
        uses: actions/checkout@v2

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./${{ secrets.ENVIRONMENT }}

      - name: Apply Terraform
        run: |
          if [ "${{ secrets.ENVIRONMENT }}" = "dev" ]; then
            cd dev
            terraform apply -auto-approve
          elif [ "${{ secrets.ENVIRONMENT }}" = "prod" ]; then
            cd prod
            terraform apply -auto-approve
          elif [ "${{ secrets.ENVIRONMENT }}" = "qa" ]; then
            cd qa
            terraform apply -auto-approve
          else
            echo "Invalid environment specified."
            exit 1
          fi

      - name: Save Terraform state
        run: |
          if [ -f terraform/terraform.tfstate ]; then
            echo "Terraform state file found. Uploading to artifacts."
            tar -czvf terraform-state.tar.gz terraform/terraform.tfstate
            mv terraform-state.tar.gz ./artifacts/
          else
            echo "Terraform state file not found. Skipping artifact upload."
          fi
        working-directory: ./${{ secrets.ENVIRONMENT }}

      - name: Upload artifacts
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: terraform-state
          path: artifacts/terraform-state.tar.gz
